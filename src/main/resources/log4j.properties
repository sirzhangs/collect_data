#定义LOG输出级别
log4j.rootLogger=debug,stdout,D,E
#定义日志输出目的地为控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%c] - %m%n

##文件大小到达指定尺寸的时候产生一个新的文件
#log4j.appender.D = org.apache.log4j.RollingFileAppender
##指定输出目录
#log4j.appender.D.File = exception/parseData.log
##定义文件最大大小
#log4j.appender.D.MaxFileSize = 10MB
## 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
#log4j.appender.D.Threshold = Error
#log4j.appender.D.layout = org.apache.log4j.PatternLayout
#log4j.appender.D.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n

log4j.appender.D = org.apache.log4j.DailyRollingFileAppender
log4j.appender.D.File =exception/parseDataexception.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = ERROR
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =logs/parseDataInfo.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = INFO
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

##设置包的日志级别
logging.level.com.haocang.service=INFO
logging.level.com.haocang.mapper=DEBUG